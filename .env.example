# KillKrill Environment Configuration
# Copy this file to .env and customize for your environment

# License Configuration (Required)
LICENSE_KEY=PENG-XXXX-XXXX-XXXX-XXXX-XXXX
PRODUCT_NAME=killkrill
LICENSE_SERVER_URL=https://license.penguintech.io

# Database Configuration
POSTGRES_DB=killkrill
POSTGRES_USER=killkrill
POSTGRES_PASSWORD=killkrill123
POSTGRES_PORT=5432
DATABASE_URL=postgresql://killkrill:killkrill123@postgres:5432/killkrill

# Redis Configuration
REDIS_PASSWORD=killkrill123
REDIS_PORT=6379
REDIS_URL=redis://:killkrill123@redis:6379

# KillKrill Service Ports
MANAGER_PORT=8080
RECEIVER_HTTP_PORT=8081
METRICS_PORT=8082
RECEIVER_SYSLOG_PORT_RANGE=10000-11000

# Elasticsearch Configuration
ELASTICSEARCH_PORT=9200
ELASTICSEARCH_TRANSPORT_PORT=9300
ELASTICSEARCH_HOSTS=http://elasticsearch:9200
ELASTICSEARCH_INDEX_PREFIX=killkrill

# Kibana Configuration
KIBANA_PORT=5601
KIBANA_USERNAME=
KIBANA_PASSWORD=

# Logstash Configuration
LOGSTASH_PORT=5044
LOGSTASH_API_PORT=9600

# Prometheus Configuration
PROMETHEUS_PORT=9090
PROMETHEUS_GATEWAY=http://prometheus:9090
PROMETHEUS_PUSH_INTERVAL=15

# Grafana Configuration
GRAFANA_PORT=3000
GRAFANA_USER=admin
GRAFANA_PASSWORD=killkrill123

# AlertManager Configuration
ALERTMANAGER_PORT=9093

# ElastAlert Configuration (ELK Alerting)
PAGERDUTY_SERVICE_KEY=your-pagerduty-service-key
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# Logstash Configuration
LOGSTASH_SYSLOG_PORT=5514
LOGSTASH_PASSWORD=logstash123

# Security Configuration
JWT_SECRET=killkrill-jwt-secret-change-in-production
API_KEY_LENGTH=64

# Processing Configuration
PROCESSOR_WORKERS=4
MAX_BATCH_SIZE=1000
MAX_QUEUE_SIZE=100000
PROCESSING_TIMEOUT=30

# Storage Retention
METRICS_RETENTION_DAYS=90
LOGS_RETENTION_DAYS=30

# Network Configuration
RECEIVER_SYSLOG_PORT_START=10000
RECEIVER_SYSLOG_PORT_END=11000
MAX_SOURCES_PER_APP=100

# Performance Settings
REDIS_MAX_CONNECTIONS=100
DB_POOL_SIZE=20
ENABLE_DETAILED_METRICS=true

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=json

# Development/Production Mode
NODE_ENV=development
GIN_MODE=debug

# Python Configuration
PY4WEB_APPS_FOLDER=/app/apps
PY4WEB_HOST=0.0.0.0
PY4WEB_PORT=8080

# Email Configuration (Optional)
SMTP_SERVER=localhost
SMTP_PORT=587
SMTP_USER=
SMTP_PASSWORD=
SMTP_SENDER=noreply@localhost
SMTP_TLS=true

# Security Configuration
BCRYPT_ROUNDS=12
SESSION_SECRET=your_session_secret_here
CORS_ORIGINS=http://localhost:3000,http://localhost:8000,http://localhost:8080

# SSL/TLS Configuration
TLS_ENABLED=false
TLS_CERT_PATH=/etc/ssl/certs/server.crt
TLS_KEY_PATH=/etc/ssl/private/server.key

# Cloud Provider Configuration (AWS Example)
AWS_REGION=us-west-2
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_S3_BUCKET=

# Docker Configuration
COMPOSE_PROJECT_NAME=project-template
DOCKER_BUILDKIT=1

# Development Tools
DEBUG=false
ENABLE_PROFILING=false
METRICS_ENABLED=true

# Feature Flags (Example)
FEATURE_ADVANCED_ANALYTICS=true
FEATURE_ENTERPRISE_REPORTS=false
FEATURE_USER_MANAGEMENT=true

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_WINDOW_MINUTES=15

# Logging Configuration
LOG_FORMAT=json
LOG_FILE_PATH=/var/log/app.log
LOG_MAX_SIZE=100MB
LOG_MAX_FILES=10

# Backup Configuration
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=

# Testing Configuration
TEST_DATABASE_URL=postgresql://postgres:test_password@localhost:5432/test_db
TEST_REDIS_URL=redis://:test_password@localhost:6379/15

# Performance Configuration
MAX_CONNECTIONS=100
CONNECTION_TIMEOUT=30s
IDLE_TIMEOUT=15m
READ_TIMEOUT=10s
WRITE_TIMEOUT=10s

# Cache Configuration
CACHE_TTL=300
CACHE_MAX_SIZE=1000
CACHE_CLEANUP_INTERVAL=60s