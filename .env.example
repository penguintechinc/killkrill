# KillKrill Environment Configuration
# Copy this file to .env and configure for your deployment

# =============================================================================
# CORE KILLKRILL CONFIGURATION
# =============================================================================

# Database Configuration
POSTGRES_DB=killkrill
POSTGRES_USER=killkrill
POSTGRES_PASSWORD=killkrill123
POSTGRES_PORT=5432

# Redis Configuration
REDIS_PASSWORD=killkrill123
REDIS_PORT=6379

# Elasticsearch Configuration
ELASTICSEARCH_PORT=9200
ELASTICSEARCH_TRANSPORT_PORT=9300

# Logstash Configuration
LOGSTASH_PORT=5044
LOGSTASH_SYSLOG_PORT=5514
LOGSTASH_API_PORT=9600
LOGSTASH_PASSWORD=logstash123

# Kibana Configuration
KIBANA_PORT=5601
KIBANA_USERNAME=
KIBANA_PASSWORD=

# Prometheus Configuration
PROMETHEUS_PORT=9090

# Grafana Configuration
GRAFANA_PORT=3000
GRAFANA_USER=admin
GRAFANA_PASSWORD=killkrill123
GRAFANA_ADMIN_TOKEN=

# AlertManager Configuration
ALERTMANAGER_PORT=9093

# KillKrill Services Configuration
RECEIVER_HTTP_PORT=8081
RECEIVER_SYSLOG_PORT_RANGE=10000-11000
METRICS_PORT=8082
MANAGER_PORT=8080
LOG_LEVEL=info

# =============================================================================
# LICENSING CONFIGURATION
# =============================================================================

# PenguinTech License Server
LICENSE_KEY=PENG-DEMO-DEMO-DEMO-DEMO-DEMO
PRODUCT_NAME=killkrill
LICENSE_SERVER_URL=https://license.penguintech.io

# =============================================================================
# FLEET CONFIGURATION
# =============================================================================

# Fleet Database (MySQL)
FLEET_MYSQL_DATABASE=fleet
FLEET_MYSQL_USER=fleet
FLEET_MYSQL_PASSWORD=fleet123
FLEET_MYSQL_ROOT_PASSWORD=fleetroot123
FLEET_MYSQL_PORT=3307

# Fleet Redis Cache
FLEET_REDIS_PASSWORD=fleetredis123
FLEET_REDIS_PORT=6380

# Fleet Server Configuration
FLEET_PORT=8084
FLEET_METRICS_PORT=8085
FLEET_SERVER_URL=https://killkrill-fleet.local:8084
FLEET_LOG_LEVEL=info

# Fleet Authentication
FLEET_JWT_KEY=supersecretfleetjwtkey123456
FLEET_API_TOKEN=

# Fleet License (optional)
FLEET_LICENSE_KEY=

# Fleet Agent Enrollment
FLEET_ENROLL_SECRET=changeme-fleet-secret-123

# Fleet Data Forwarding (AWS Kinesis-compatible)
FLEET_KINESIS_ACCESS_KEY=fleet
FLEET_KINESIS_SECRET_KEY=fleetlogs123

# =============================================================================
# AI ANALYSIS CONFIGURATION (ENTERPRISE)
# =============================================================================

# OpenAI-Compatible Endpoint Configuration
AI_ENDPOINT_URL=https://api.anthropic.com/v1/messages
AI_API_KEY=
AI_MODEL=claude-3-haiku-20240307
AI_PROVIDER=anthropic

# Supported AI Providers:
# - anthropic (Claude) - https://api.anthropic.com/v1/messages
# - openai (GPT) - https://api.openai.com/v1/chat/completions
# - ollama (Local) - http://localhost:11434/api/generate
# - custom - Your own OpenAI-compatible endpoint

# AI Analysis Settings
AI_ANALYSIS_INTERVAL=4          # Hours between automated analyses
AI_ANALYSIS_LOOKBACK=24         # Hours of data to analyze

# Alternative AI Endpoint Examples:
# Azure OpenAI: https://your-resource.openai.azure.com/openai/deployments/your-deployment/chat/completions?api-version=2023-05-15
# Local Ollama: http://localhost:11434/api/generate
# Custom endpoint: https://your-ai-api.com/v1/chat/completions

# =============================================================================
# NOTIFICATION CONFIGURATION
# =============================================================================

# Email/SMTP Configuration
SMTP_SERVER=localhost
SMTP_PORT=587
SMTP_SENDER=noreply@killkrill.local
SMTP_USER=
SMTP_PASSWORD=

# PagerDuty Integration
PAGERDUTY_SERVICE_KEY=

# Slack Integration
SLACK_WEBHOOK_URL=

# =============================================================================
# SERVICE PROXY CONFIGURATION
# =============================================================================

# Service URLs (usually auto-configured)
GRAFANA_URL=http://grafana:3000
KIBANA_URL=http://kibana:5601
PROMETHEUS_URL=http://prometheus:9090
ELASTICSEARCH_URL=http://elasticsearch:9200
ALERTMANAGER_URL=http://alertmanager:9093

# Elasticsearch Authentication (if enabled)
ELASTICSEARCH_USERNAME=
ELASTICSEARCH_PASSWORD=

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Performance Tuning
PROCESSOR_WORKERS=4
MAX_BATCH_SIZE=1000
PROMETHEUS_PUSH_INTERVAL=15

# Network Configuration
KILLKRILL_NETWORK_SUBNET=172.20.0.0/16

# Development/Debug Settings
DEBUG=false
ENABLE_PROFILING=false
VERBOSE_LOGGING=false

# =============================================================================
# INFRASTRUCTURE DEPLOYMENT
# =============================================================================

# Kubernetes Configuration (for K8s deployments)
KUBERNETES_NAMESPACE=killkrill
FLEET_AGENTS_NAMESPACE=fleet-agents

# Docker Resource Limits
ELASTICSEARCH_MEMORY_LIMIT=34g
ELASTICSEARCH_MEMORY_RESERVATION=32g
LOGSTASH_MEMORY_LIMIT=6g
LOGSTASH_MEMORY_RESERVATION=4g

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# TLS Configuration
ENABLE_TLS=true
TLS_CERT_PATH=/etc/certs/tls.crt
TLS_KEY_PATH=/etc/certs/tls.key

# Authentication Settings
JWT_SECRET_KEY=supersecretjwtkey123456789
SESSION_TIMEOUT=28800  # 8 hours

# API Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=100

# =============================================================================
# MONITORING & ALERTING
# =============================================================================

# Metrics Retention
PROMETHEUS_RETENTION=200h
ELASTICSEARCH_RETENTION_DAYS=30

# Alert Thresholds
CPU_ALERT_THRESHOLD=80
MEMORY_ALERT_THRESHOLD=85
DISK_ALERT_THRESHOLD=90

# Health Check Settings
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Only use these in development environments
DEV_ENABLE_CORS=true
DEV_SKIP_AUTH=false
DEV_MOCK_SERVICES=false
DEV_LOG_ALL_REQUESTS=false

# Test Data Generation
GENERATE_TEST_LOGS=false
GENERATE_TEST_METRICS=false
TEST_DATA_RATE=10  # logs/metrics per second